在创建数据库时，默认情况下几个默认的用户账号会随之创建。
锁定账号和密码过期
下面 语句可以锁定所有账号 且使密码过期
select 'alter  user' || username || ' password expire account lock;' from dba_users;
解锁
alter user outln account unlock;
oracle中没有alter user <user_name> password unexpire 命令。要使过期的密码重新生效，需要更改他：
alter user <用户名> identified by <新密码>；

不更改密码使其重新生效：
1、使用DBA数据库特权用户查看该用户当前的配置文件：
select username,profile from dba_users where username='MV_MAINT';
2、创建一个临时配置文件：
create prifile temp_prof limit password_reuse_max unlimited password_reuse_time unlimited;
3、将这个临时配置文件分配给该用户：
alter user mv_maint profile temp_prof;
4、查看引起混乱的额密码：
select password from user$ where name='mv_maint';
5、使用原密码设置该账号的新密码，这可以使已过期的密码重新生效：
alter user mv_maint identified by values '上面语句查询的结果'
6、将原来的配置文件重新分配给用户；
alter user mv_maint profile default;

select distinct u.username ,case when dd.user_name is null then 'DBA created account' else 'oracle created account'
end 
from dba_users u ,default_pwd$ d where u.username=d.user_name(+);
select distinct(user_name) from default_pwd$ where user_name in (select username from dba_users);
上面的查询语句也不一定100%正确，DBA可以将用户账号手动添加到default_pwd$视图中。

创建用户账号
需要考虑下列因素：
用户名和验证方式；
基本权限；
默认的永久表空间和空间配额
默认的临时表空间；

选择用户名和验证方式
验证是指确认用户账号已获得授权的机制。
数据库验证（将用户名和密码存储在数据库中）
os验证
网络验证；
全局用户验证和授权；
外部服务验证

1、创建数据库验证用户
create user heera identified by chaya
default tablespace users
temporary tablespace temp 
quota unlimited on users;
这会创建一个没有任何权限的用户账号。使用户可用，赋权：
grant create session to heera;
grant createt table to heera;
还可以使用grant...identified by 语句创建用户，例如：
grant create table,create session to heera identified by chaya;

创建os验证用户账号
os验证采用的机制是，只要用户能够登陆数据库服务器的os,就赋予用户数据库权限。os验证方式有两种：
将特定的os角色分配给用户（支持将数据库权限与os账号对应）；
通过identified by externally 子句验证普通的数据库用户。

登录数据库服务器的os后，使用identified externally子句创建的用户账号，能够在不提供用户名和密码的情况下连接数据库。：
访问数据库服务器的用户无需保留数据库的用户名和密码。
由os验证用户执行的登录数据库的脚本无需使用硬编码的密码。
其他数据库用户无法通过猜测用户名和密码，非法使用其他 用户账号。使用os验证用户账号的唯一方式就是登录os.

oracle会为设置os用户连接数据库的初始化参数os_authent_prefix的值添加前缀。该参数的默认值为OPS$。oracle公司强烈建议将os_authent_prefix参数设置为空字符串；例如：
alter system set os_authent_prefix='' scope=spfile;
要使这个修改生效，必须重启数据库。
示例：
create user jsmith identified externally;
grant create session to jsmith;
当jsmith登录了数据库服务器的os后，该用户就可以连接sql*plus:
sqlplus  /
无需提供用户名和密码，因为该用户已经通过了os验证。

分配默认的永久和临时表空间
查看用户信息
select username,password,default_tablespace,temporary_tablespace from dba_users;
除了sys之外的所有用户都不应该将system表空间用作默认的永久表空间。
应该为所有用户分配临时表空间。通常，该表空间会被命名为temp
如果发现用户错误的设置了默认表空间，可以使用alter user命名修改：
alter user inv_mgmt default tablespace users temporary tablespace temp;
检查用户是否将system表空间用作临时表空间，可运行下面的脚本：
select username from dba_users where temporary_tablespace='system';

创建用户脚本creuser.sql示例：
define cre_user=inv_mgmt
define cre_user_pwd=inv_mgmt_pwd
define def_tbsp=inv_data
define idx_tbsp=inv_index
define def_tetmp_tbsp=temp
define smk_ttbl=zzzzz

create user &&cre_user identified by &&cre_user__pwd
defult tablespace &&def_tbsp
temporary tablespace &&def_temp_tbsp;

grant create session to &&cre_user;
grant create table to &&cre_user;

alter user &&cre_user quota unlimited on &&def_tbsp;
alter user &&cre_user quota unlimited on &&idx_tbsp;

smoke test
conn &&cre_user/&&cre_user_pwd
create table &&smk_ttbl(test_id number) tablespace &&def_tbsp;
create index &&smk_ttbl._idx1 on &&smk_ttbl(test_id) tablespace &&idx_tbsp;
insert into &&smk_ttbl values(1)；
drop table &&smk_ttbl;

修改密码
alter user heera identified by foobar;

使用其他用户账号登录
在不知道其他用户密码的情况下使用这些用户登录数据库，必须使用拥有DBA权限的用户账号。
1、dba账号可以临时存储用户的模糊密码
2、更改用户的密码
3、通过新密码使用户连接数据库，并运行ddl语句。
4、使用DBA账号连接数据库，将该用户的密码改回原来的密码。

示例，临时更改用户密码然后将其改回原来密码的方法。
select 'alter user appusr identified by values ' || '''' || password || '''' || ';' from user$ where name='appusr';

alter usere appusr identified by values 'dasdfsdfwe32324';
然后更改该用户的密码（本例使用foo）：
alter user appusr identified by foo;
使用appusr用户连接数据库：
conn appusr/foo
使用appusr用户完成任务后，将它的密码改回原来的值：
alter user appusr identified by values '32sdsulj498dhl23jl';

假如在改回原密码时，遇到了不允许更改的情况，可以临时更改用户的配置文件，使该密码继续有效。应先检查用户当前使用哪个配置文件：
select username,profile from dba_users where username=upper('&&username');
然后创建允许无限重用密码的专用配置文件：
crate profile temp_prof limit 
password_reuse_max unlimited
password_reuse_time unlimited;
为用户分配无重用限制的配置文件：
alter user appusr profile temp_prof;
这样就可以像之前那样修改密码了：
alter user appusr identified by values '32sdsulj498dhl23jl';

应确保恢复用户原来的配置文件：
alter user appusr profile secure;
最后，删除临时配置文件，避免将来不小心使用它：
drop profile temp_prof;

修改用户
由于下列原因，有时需要修改现有用户：
更改用户密码；
锁定或解锁用户账号；
更改默认的永久表空间和临时表空间；
更改配置文件或角色；
更改系统或对象权限；
修改表空间的限额。
修改密码
alter user inv_mgmt identified by i2jy22a;
如果在创建用户时没有设置默认的永久表空间和临时表空间，可以在创建用户后进行修改：
alter user inv_mgmt default tablespace users temporary tablespace temp;
锁定用户
alter user inv_mgmt account lock;
更改用户在users表空间中的限额：
alter user inv_mgmt quota 500m on users;

删除用户
删除用户前先锁定用户
alter user heera account lock;
查看数据库中的锁定用户和锁定日期，可执行下面的查询命令；
select username,lock_date from dba_users;
解锁用户账号，可执行下面的命令：
alter user heera account unlock;
删除用户：
drop user heera;
如果用户拥有数据库对象，那么上面的语句就无法生效，使用cascade子句可以删除用户及其对象：
drop user heera cascade;








































































































































